services:
  # shared builder for web, celery, celery-beat
  builder:
    build:
      context: .
      target: builder

  web:
    build:
      context: .
      target: app
    container_name: web
    volumes:
      - ./app:/home/app/web/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - builder
      - db
      - redis
    networks:
      - events_network
    restart: unless-stopped
    entrypoint: ./entrypoint.sh

  db:
    image: postgres:17
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql@17/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    networks:
      - events_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - events_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery-high:
    build:
      context: .
      target: app
    container_name: celery-high
    command: celery -A notifications worker --queues=high_priority --loglevel=info
    volumes:
      - ./app:/home/app/web/app
    env_file:
      - .env
    environment:
      - CELERY_WORKER_CONCURRENCY=4
    depends_on:
      - builder
      - web
      - redis
      - db
    networks:
      - events_network
    restart: unless-stopped

  celery-default:
    build:
      context: .
      target: app
    container_name: celery-default
    command: celery -A notifications worker --queues=default --loglevel=info
    volumes:
      - ./app:/home/app/web/app
    env_file:
      - .env
    environment:
      - CELERY_WORKER_CONCURRENCY=2
    depends_on:
      - builder
      - web
      - redis
      - db
    networks:
      - events_network
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      target: app
    container_name: celery-beat
    command: celery -A notifications beat --loglevel=info
    volumes:
      - ./app:/home/app/web/app
    env_file:
      - .env
    depends_on:
      - builder
      - web
      - redis
      - db
    networks:
      - events_network
    restart: unless-stopped

  flower:
    image: mher/flower:0.9.7
    container_name: flower
    command: flower --broker=redis://redis:6379/0 --port=5555
    depends_on:
      - redis
      - celery-high
      - celery-default
    ports:
      - "5555:5555"
    networks:
      - events_network
    restart: unless-stopped

  grpc:
    build:
      context: ./app/grpc_server
      dockerfile: Dockerfile_grpc
    container_name: grpc
    command: python /home/grpc/grpc_server/grpc_server_main.py
    ports:
      - "50051:50051"
    networks:
      - events_network
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile_nginx
    container_name: nginx
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - events_network
    restart: unless-stopped

networks:
  events_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
